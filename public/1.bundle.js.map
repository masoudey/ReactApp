{"version":3,"sources":["webpack:///./src/Components/List.js","webpack:///./src/Components/workthumbnail.js","webpack:///./src/containers/WorksPage.js","webpack:///./src/containers/works.css"],"names":["List","props","fetching","items","renderItem","loadingText","isEmpty","Object","keys","length","console","log","map","Component","defaultProps","workThumb","work","img","title","desc","id","loadData","loadPosts","WorksPage","state","scrollanim","window","addEventListener","handleScroll","bind","event","scrollY","setState","removeEventListener","works","values","posts","scrolling","renderPost","mapStateToProps","entities","users","connectedBlog"],"mappings":"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","file":"1.bundle.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { GridLoader } from \"react-spinners\";\r\n\r\nclass List extends Component {\r\n    \r\n    static defaultProps = {\r\n        fetching: true,\r\n        loadingText: 'Loading.....'\r\n    }\r\n\r\n    render() {\r\n        const { fetching, items, renderItem, loadingText } = this.props;\r\n        \r\n        const isEmpty = Object.keys(items).length === 0 ;\r\n        console.log(items, isEmpty);\r\n        if (isEmpty && fetching) {\r\n            return <GridLoader color={'#123abc'} loading={fetching} />\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {items.map(renderItem)}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst workThumb = (props) => {\r\n    const work = props.work;\r\n    return (\r\n        \r\n            <li class=\"shown\" >\r\n                <div class=\" grid-post\">\r\n                    <figure class=\"effect-layla layla\">\r\n                        <img src={`/${work.img}`} alt=\"img03\" />\r\n                        <figcaption class=\"layla\">\r\n                            <h2>{work.title}</h2>\r\n                            <p class=\"desc\">{work.desc}</p>\r\n                            <p>\r\n                                <Link state={work} to={`/works/${work.id}`}><i class=\"icon-link\"></i></Link>\r\n                            </p>\r\n                        </figcaption>           \r\n                    </figure>\r\n                </div>\r\n            </li>\r\n      \r\n    )\r\n}\r\n\r\nexport default workThumb;","import React, { Component } from \"react\";\r\nimport \"./works.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loadPosts } from \"../actions\";\r\nimport List from \"../Components/List\";\r\nimport WorkThumb from \"../Components/workthumbnail\";\r\n\r\nconst loadData = props => {\r\n    props.loadPosts()\r\n}\r\n\r\nclass WorksPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scrollanim:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ( !(typeof window === 'undefined')) {\r\n            window.addEventListener('scroll', this.handleScroll.bind(this))\r\n        }\r\n        console.log(this.state.scrollanim);\r\n        console.log('did mount')\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        loadData(this.props)\r\n        // if ( !(typeof window === \"undefined\")) {\r\n        //     window.removeEventListener('scroll', this.handleScroll.bind(this))\r\n        // }\r\n        console.log(\"will mount\");\r\n    }\r\n    componentWillReceiveProps() {\r\n        console.log(\"will recevie props\")\r\n    }\r\n\r\n    handleScroll (event) {\r\n        if (window.scrollY > 1 && this.state.scrollanim === false) {\r\n            this.setState({scrollanim: true})\r\n        } else if (window.scrollY <= 1 && this.state.scrollanim === true) {\r\n            this.setState({scrollanim: false})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n        if ( !(typeof window === \"undefined\")) {\r\n            window.removeEventListener('scroll', this.handleScroll.bind(this))\r\n        }\r\n    }\r\n\r\n    renderPost(work) {\r\n        return <WorkThumb work={work} key={work.id}></WorkThumb>\r\n    }\r\n\r\n    render() {\r\n        const works = Object.values(this.props.posts);\r\n        const scrolling = this.state.scrollanim ? 'modify' : '';\r\n\r\n        return (\r\n            <div id=\"works\" class={`blog intro-effect-sliced  ${scrolling}`}>\r\n            <section id=\"header-block\" class=\"header \">\r\n                    <div class=\"bg-img\">\r\n                        <img src=\"/works.jpg\" alt=\"Background Image\" />\r\n                    </div>\r\n                    <div class=\"title\">\r\n                        <h1>Works</h1>\r\n                    </div>\r\n                    <p class=\"subline\">Inspiration for Article Intro Effects</p>\r\n                    <div class=\"bg-img\">\r\n                        <img src=\"/works.jpg\" alt=\"Background Image\" />\r\n                    </div>\r\n            </section>\r\n            <section id=\"posts-block\" class=\"works content  blog-thumb\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <ul id=\"grid\" class=\"grid effect-5\" >\r\n                        {/* {posts && posts.map(post => <PostThumb key={post.id} post={post} />)} */}\r\n                        <List \r\n                            renderItem={this.renderPost}\r\n                            items={works}\r\n                            loadingText={'Loading Posts'}\r\n                            />\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const {entities: { users, posts }} = state;\r\n    return {\r\n        posts,\r\n        users\r\n    };\r\n}\r\nconst connectedBlog = withRouter(connect(mapStateToProps, {loadPosts})(WorksPage));\r\nexport default connectedBlog;","// extracted by mini-css-extract-plugin"],"sourceRoot":""}
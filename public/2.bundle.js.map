{"version":3,"sources":["webpack:///./src/containers/works.css","webpack:///./src/containers/WorksPage.js","webpack:///./src/containers/works.css?0b72"],"names":["WorksPage","props","match","path","Component"],"mappings":";;;;;;;;;AAAA;AACA;;;AAGA;AACA,iCAAkC,mCAAmC,GAAG,gBAAgB,0BAA0B,iBAAiB,uBAAuB,yBAAyB,GAAG;;AAEtL;;;;;;;;;;;;;;;;;;;;;ACPA;;;;AACA;;;;;;;;;;IACMA,S;;;;;;;;;;;iCAIO;;AAEL,mBACI;AAAA;AAAA,kBAAK,WAAM,WAAX;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAQI;AAAA;AAAA,sBAAK,WAAM,YAAX;AAAA;AACa,yBAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAD9B;AAAA;AAAA;AARJ,aADJ;AAcH;;;;EApBmBC,gB;;kBAuBTJ,S;;;;;;;;;;;;ACxBf;;AAEA;;AAEA;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;AAEA,Y","file":"2.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".works {\\n    background-color: blueviolet;\\n}\\n\\n.work-page {\\n    margin-top: 100px\\n}\\n\\n.work-block {\\n    color: chocolate;\\n    text-align: center;\\n}\", \"\"]);\n\n// exports\n","import React, { Component } from \"react\";\nimport \"./works.css\";\nclass WorksPage extends Component {\n\n    \n    \n    render() {\n        \n        return (\n            <div class=\"work-page\">\n                <style>{`\n                    .work-page {\n                        color: green;\n                    }\n                    \n                `}</style>\n\n                <div class=\"work-block\">\n                    this is {this.props.match.path} page\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WorksPage;","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./works.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./works.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./works.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}